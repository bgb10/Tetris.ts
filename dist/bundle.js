!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GAME_CONFIG={UPDATE_AFTER_X_FRAMES:10,GAME_WIDTH:15,GAME_HEIGHT:20,CANVAS_MIN_WIDTH:300,CANVAS_MIN_HEIGHT:400,CELL_SIZE:20,NEXT_SHAPE_CELL_SIZE:5,STROKE_WIDTH:.5,BACKGROUND_COLOR:"#28363B",STROKE_COLOR:"black",SHAPE_COLORS:["#F9B38F","#BF6C86","#84AF9C","#6D5C80","#FFA3D0","#439F9E","#EF5F3C"],SCORE_LABEL_FONT:"10px Comic Sans MS",NEXT_SHAPE_LABEL_FONT:"10px Comic Sans MS",GAME_OVER_LABEL_FONT:"25px Comic Sans MS",GAME_OVER_YOUR_SCORE_LABEL_FONT:"15px Comic Sans MS",FONT_COLOR:"white",SCORE_LABEL:"Score: ",NEXT_SHAPE_LABEL:"Next Shape: ",GAME_OVER_LABEL:"Game Over!",GAME_OVER_YOUR_SCORE_LABEL:"Your Score: ",NEXT_SHAPE_POSITION:{X:283,Y:6},SCORE_LABEL_POSITION:{X:5,Y:13,ALIGNMENT:"left"},NEXT_SHAPE_LABEL_POSITION:{X:215,Y:13,ALIGNMENT:"left"},GAME_OVER_LABEL_POSITION:{X:150,Y:200,ALIGNMENT:"center"},GAME_OVER_YOUR_SCORE_LABEL_POSITION:{X:150,Y:235,ALIGNMENT:"center"},START_KEY:32,LEFT_KEY:37,RIGHT_KEY:39,UP_KEY:38,DOWN_KEY:40,DROP:13,FILLED_LINE_BONUS:100,DROPPED_SHAPE_BONUS:2,LOWERED_SHAPE_BONUS:1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){this._x=e,this._y=t}return Object.defineProperty(e,"Zero",{get:function(){return new e(0,0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"X",{get:function(){return this._x},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Y",{get:function(){return this._y},enumerable:!0,configurable:!0}),e.prototype.addX=function(t){return new e(this._x,this._y).addToX(t)},e.prototype.addY=function(t){return new e(this._x,this._y).addToY(t)},e.prototype.addToX=function(e){return this._x+=e,this},e.prototype.addToY=function(e){return this._y+=e,this},e.prototype.add=function(e,t){return this.addToX(e),this.addToY(t),this},e}();t.Vector2=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1),o=function(){function e(e,t){this._canvasContainer=t,this._canvas=e,this._context=this._canvas.getContext("2d"),this.resizeCanvas()}return e.prototype.fixDPI=function(e){this._dpi=window.devicePixelRatio;var t=+getComputedStyle(this._canvas).getPropertyValue("height").slice(0,-2),n=+getComputedStyle(this._canvas).getPropertyValue("width").slice(0,-2);this._canvas.setAttribute("height",(t*this._dpi).toString()),this._canvas.setAttribute("width",(n*this._dpi).toString()),this._context.scale(this._dpi*e.X,this._dpi*e.Y)},e.prototype.resizeCanvas=function(){var e=r.GAME_CONFIG.GAME_WIDTH*r.GAME_CONFIG.CELL_SIZE,t=r.GAME_CONFIG.GAME_HEIGHT*r.GAME_CONFIG.CELL_SIZE,n=e/t,o=window.innerHeight-10>=r.GAME_CONFIG.CANVAS_MIN_HEIGHT?window.innerHeight-10:r.GAME_CONFIG.CANVAS_MIN_HEIGHT,a=window.innerWidth>=r.GAME_CONFIG.CANVAS_MIN_WIDTH?window.innerWidth:r.GAME_CONFIG.CANVAS_MIN_WIDTH;a=a/o>n?o*n:a/n,this._canvasContainer.style.width=a+"px",this._canvasContainer.style.height=o+"px",this._canvasContainer.style.marginLeft=(window.innerWidth-20-a)/2+"px",this._canvasContainer.style.marginRight=(window.innerWidth-20-a)/2+"px";var s=new i.Vector2(a/e,o/t);this._canvas.width=a,this._canvas.height=o,this.fixDPI(s)},e.prototype.clear=function(){this._context.clearRect(0,0,this._canvas.width,this._canvas.height)},e.prototype.drawBackground=function(e){this._context.save(),this._context.fillStyle=e,this._context.fillRect(0,0,this._canvas.width,this._canvas.height),this._context.restore()},e.prototype.drawRect=function(e,t,n,i,o){this._context.save(),this._context.lineWidth=r.GAME_CONFIG.STROKE_WIDTH,this._context.strokeStyle=n,this._context.fillStyle=t,this._context.fillRect(e.X,e.Y,i,o),this._context.strokeRect(e.X,e.Y,i,o),this._context.restore()},e.prototype.drawText=function(e,t,n,r,i){void 0===i&&(i="left"),this._context.save(),this._context.fillStyle=n,this._context.font=t,this._context.textAlign=i,this._context.fillText(e,r.X,r.Y),this._context.restore()},e.prototype.drawRectAtCell=function(e,t,n,r,o){this.drawRect(new i.Vector2(t*o,e*o),n,r,o,o)},e}(),a=document.getElementById("screen"),s=document.getElementById("screen");t.canvas2D=new o(a,s),window.addEventListener("resize",t.canvas2D.resizeCanvas.bind(t.canvas2D))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){var e=this;this._keysPressed=[],document.addEventListener("keydown",function(t){e.keyDown(t)})}return e.prototype.keyDown=function(e){this._keysPressed[e.keyCode]=!0},e.prototype.reset=function(){this._keysPressed=[]},e.prototype.isPressed=function(e){return this._keysPressed[e]},e}();t.keyboard=new r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.I=0]="I",e[e.J=1]="J",e[e.L=2]="L",e[e.S=3]="S",e[e.Z=4]="Z",e[e.O=5]="O",e[e.T=6]="T"}(t.ShapeType||(t.ShapeType={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=n(6),o=n(3),a=n(2),s=n(0);function _(){r.gameOver?(a.canvas2D.clear(),a.canvas2D.drawBackground(s.GAME_CONFIG.BACKGROUND_COLOR),a.canvas2D.drawText(s.GAME_CONFIG.GAME_OVER_LABEL,s.GAME_CONFIG.GAME_OVER_LABEL_FONT,s.GAME_CONFIG.FONT_COLOR,s.GAME_CONFIG.GAME_OVER_LABEL_POSITION,s.GAME_CONFIG.GAME_OVER_LABEL_POSITION.ALIGNMENT),a.canvas2D.drawText(s.GAME_CONFIG.GAME_OVER_YOUR_SCORE_LABEL+r.score,s.GAME_CONFIG.GAME_OVER_YOUR_SCORE_LABEL_FONT,s.GAME_CONFIG.FONT_COLOR,s.GAME_CONFIG.GAME_OVER_YOUR_SCORE_LABEL_POSITION,s.GAME_CONFIG.GAME_OVER_LABEL_POSITION.ALIGNMENT),o.keyboard.isPressed(s.GAME_CONFIG.START_KEY)&&r.init()):(r.update(),a.canvas2D.clear(),a.canvas2D.drawBackground(s.GAME_CONFIG.BACKGROUND_COLOR),r.draw()),o.keyboard.reset(),requestAnimationFrame(_)}r=new i.GameWorld(s.GAME_CONFIG.GAME_WIDTH,s.GAME_CONFIG.GAME_HEIGHT),_()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(3),o=n(1),a=n(2),s=n(4),_=n(7),c=n(9),h=function(){function e(e,t){this._movingShape=null,this._shapesQueue=[],this._shapeTypes=[s.ShapeType.I,s.ShapeType.J,s.ShapeType.L,s.ShapeType.O,s.ShapeType.S,s.ShapeType.Z,s.ShapeType.T],this._shapeFactory=new c.ShapeFactory,this._map=new _.GameMap(e,t),this.init()}return Object.defineProperty(e.prototype,"gameOver",{get:function(){return this._gameOver},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"score",{get:function(){return this._score},enumerable:!0,configurable:!0}),e.prototype.increaseScore=function(e){this._score+=e},e.prototype.dropShape=function(){for(var e=0;!this.lowerShape();)e++;return e},e.prototype.handleInput=function(){var e=this,t=0;if(i.keyboard.isPressed(r.GAME_CONFIG.DROP)){var n=this.dropShape();this.increaseScore(n*r.GAME_CONFIG.DROPPED_SHAPE_BONUS)}else i.keyboard.isPressed(r.GAME_CONFIG.UP_KEY)?this.rotateShape():i.keyboard.isPressed(r.GAME_CONFIG.DOWN_KEY)?(this.lowerShape(),this.increaseScore(r.GAME_CONFIG.LOWERED_SHAPE_BONUS)):i.keyboard.isPressed(r.GAME_CONFIG.LEFT_KEY)?t=-1:i.keyboard.isPressed(r.GAME_CONFIG.RIGHT_KEY)&&(t=1);0!==t&&(this._movingShape.cells.some(function(n){var r=n.X+t,i=e._movingShape.isPartOfShape(n.addX(t));return r<0||r===e._map.width||e._map.isCellFilled(r,n.Y)&&!i})||(this._map.clearShape(this._movingShape),this._movingShape.move(t,0),this._map.colorShape(this._movingShape)))},e.prototype.rotateShape=function(){var e=this;if(this._movingShape.origin){for(var t=[],n=0,r=this._movingShape.cells;n<r.length;n++){var i=r[n],o=i.X-this._movingShape.origin.X,a=-(i.Y-this._movingShape.origin.Y),s=o,_=this._movingShape.origin.addX(a).addY(s);t.push(_)}t.every(function(t){var n=e._movingShape.isPartOfShape(t);return e._map.isInMap(t.X,t.Y)&&(!e._map.isCellFilled(t.X,t.Y)||n)})&&(this._map.clearShape(this._movingShape),this._movingShape.cells=t,this._map.colorShape(this._movingShape))}},e.prototype.lowerShape=function(){var e=this,t=this._movingShape.cells.some(function(t){var n=t.Y+1,r=e._movingShape.isPartOfShape(t.addY(1));return n===e._map.height||e._map.isCellFilled(t.X,n)&&!r});return t||(this._map.clearShape(this._movingShape),this._movingShape.move(0,1),this._map.colorShape(this._movingShape)),t},e.prototype.handleFilledLines=function(){var e=this._map.removeFilledLines();e>0&&(this.increaseScore(e*r.GAME_CONFIG.FILLED_LINE_BONUS),this._updateEveryXFrames>0&&this._updateEveryXFrames--)},e.prototype.checkForGameOver=function(){return this._map.anyFilledOnRow(0)},e.prototype.generateRandomShape=function(){var e=Math.floor(Math.random()*this._shapeTypes.length),t=r.GAME_CONFIG.SHAPE_COLORS[e];return this._shapeFactory.createShape(this._shapeTypes[e],new o.Vector2(Math.floor(this._map.width/2),-3),t)},e.prototype.drawShapesInQueue=function(){a.canvas2D.drawText(r.GAME_CONFIG.NEXT_SHAPE_LABEL,r.GAME_CONFIG.NEXT_SHAPE_LABEL_FONT,r.GAME_CONFIG.FONT_COLOR,r.GAME_CONFIG.NEXT_SHAPE_LABEL_POSITION,r.GAME_CONFIG.NEXT_SHAPE_LABEL_POSITION.ALIGNMENT);for(var e=function(e){var n=t._shapesQueue[e],i=t._shapesQueue.length-1-e,s=t._shapeFactory.createShape(n.shapeType,new o.Vector2(r.GAME_CONFIG.NEXT_SHAPE_POSITION.X+4*i*r.GAME_CONFIG.NEXT_SHAPE_CELL_SIZE,r.GAME_CONFIG.NEXT_SHAPE_POSITION.Y),n.color,r.GAME_CONFIG.NEXT_SHAPE_CELL_SIZE);s.cells.forEach(function(e){return a.canvas2D.drawRect(e,s.color,r.GAME_CONFIG.STROKE_COLOR,r.GAME_CONFIG.NEXT_SHAPE_CELL_SIZE,r.GAME_CONFIG.NEXT_SHAPE_CELL_SIZE)})},t=this,n=this._shapesQueue.length-1;n>=0;n--)e(n)},e.prototype.drawScore=function(){a.canvas2D.drawText(r.GAME_CONFIG.SCORE_LABEL+this._score.toString(),r.GAME_CONFIG.SCORE_LABEL_FONT,r.GAME_CONFIG.FONT_COLOR,r.GAME_CONFIG.SCORE_LABEL_POSITION,r.GAME_CONFIG.SCORE_LABEL_POSITION.ALIGNMENT)},e.prototype.init=function(){this._gameOver=!1,this._score=0,this._frame=0,this._updateEveryXFrames=r.GAME_CONFIG.UPDATE_AFTER_X_FRAMES,this._map.init();var e=this.generateRandomShape();this._shapesQueue=[e],this._movingShape=this.generateRandomShape()},e.prototype.update=function(){if((this.handleInput(),!(++this._frame%this._updateEveryXFrames))&&(this.lowerShape()&&(this.handleFilledLines(),this._gameOver=this.checkForGameOver(),!this._gameOver))){var e=this.generateRandomShape();this._shapesQueue.unshift(e),this._movingShape=this._shapesQueue.pop()}},e.prototype.draw=function(){this._map.draw(),this.drawScore(),this.drawShapesInQueue()},e}();t.GameWorld=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(8),i=n(2),o=n(0),a=function(){function e(e,t){this._map=[],this._width=e,this._height=t}return Object.defineProperty(e.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0}),e.prototype.init=function(){for(var e=0;e<this._height;e++){this._map[e]=[];for(var t=0;t<this._width;t++)this._map[e][t]=new r.Cell}},e.prototype.isInMap=function(e,t){return e>=0&&e<this._width&&t>=0&&t<this._height},e.prototype.isCellFilled=function(e,t){return this.isInMap(e,t)&&this._map[t][e].filled},e.prototype.clearCell=function(e,t){this.isInMap(e,t)&&(this._map[t][e].filled=!1)},e.prototype.clearShape=function(e){var t=this;e.cells.forEach(function(e){t.clearCell(e.X,e.Y)})},e.prototype.colorCell=function(e,t,n){this.isInMap(e,t)&&(this._map[t][e].filled=!0,this._map[t][e].color=n)},e.prototype.colorShape=function(e){var t=this;e.cells.forEach(function(n){t.colorCell(n.X,n.Y,e.color)})},e.prototype.anyFilledOnRow=function(e){return this._map[e].some(function(e){return e.filled})},e.prototype.removeFilledLines=function(){for(var e=0,t=0;t<this._map.length;t++){if(this._map[t].every(function(e){return e.filled})){e++,this._map.splice(t,1);for(var n=[],i=0;i<this._width;i++)n[i]=new r.Cell;this._map.unshift(n)}}return e},e.prototype.draw=function(){for(var e=0;e<this._map.length;e++)for(var t=0;t<this._map[e].length;t++){var n=this._map[e][t];n.filled&&i.canvas2D.drawRectAtCell(e,t,n.color,o.GAME_CONFIG.STROKE_COLOR,o.GAME_CONFIG.CELL_SIZE)}},e}();t.GameMap=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this._filled=!1}return Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(e){this._color=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filled",{get:function(){return this._filled},set:function(e){this._filled=e},enumerable:!0,configurable:!0}),e}();t.Cell=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(1),o=n(10),a=function(){function e(){}return e.prototype.createShape=function(e,t,n,a){void 0===a&&(a=1);var s,_=[];switch(e){case r.ShapeType.I:_=[new i.Vector2(t.X,t.Y-1*a),new i.Vector2(t.X,t.Y),new i.Vector2(t.X,t.Y+1*a),new i.Vector2(t.X,t.Y+2*a)],s=new i.Vector2(t.X,t.Y);break;case r.ShapeType.J:_=[new i.Vector2(t.X,t.Y-1*a),new i.Vector2(t.X,t.Y),new i.Vector2(t.X,t.Y+1*a),new i.Vector2(t.X-1*a,t.Y+1*a)],s=new i.Vector2(t.X,t.Y);break;case r.ShapeType.L:_=[new i.Vector2(t.X,t.Y-1*a),new i.Vector2(t.X,t.Y),new i.Vector2(t.X,t.Y+1*a),new i.Vector2(t.X+1*a,t.Y+1*a)],s=new i.Vector2(t.X,t.Y);break;case r.ShapeType.O:_=[new i.Vector2(t.X-1*a,t.Y),new i.Vector2(t.X,t.Y),new i.Vector2(t.X,t.Y+1*a),new i.Vector2(t.X-1*a,t.Y+1*a)],s=null;break;case r.ShapeType.S:_=[new i.Vector2(t.X,t.Y),new i.Vector2(t.X+1*a,t.Y),new i.Vector2(t.X,t.Y+1*a),new i.Vector2(t.X-1*a,t.Y+1*a)],s=new i.Vector2(t.X,t.Y+1*a);break;case r.ShapeType.Z:_=[new i.Vector2(t.X,t.Y),new i.Vector2(t.X-1*a,t.Y),new i.Vector2(t.X,t.Y+1*a),new i.Vector2(t.X+1*a,t.Y+1*a)],s=new i.Vector2(t.X,t.Y+1*a);break;case r.ShapeType.T:_=[new i.Vector2(t.X,t.Y),new i.Vector2(t.X,t.Y+1*a),new i.Vector2(t.X-1*a,t.Y+1*a),new i.Vector2(t.X+1*a,t.Y+1*a)],s=new i.Vector2(t.X,t.Y+1*a)}return new o.Shape(e,_,s,n)},e}();t.ShapeFactory=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,n,r){this._cells=[],this._color="",this._origin=null,this._shapeType=e,this._cells=t,this._color=r,this._origin=n}return Object.defineProperty(e.prototype,"shapeType",{get:function(){return this._shapeType},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cells",{get:function(){return this._cells},set:function(e){this._cells=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"origin",{get:function(){return this._origin},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"color",{get:function(){return this._color},enumerable:!0,configurable:!0}),e.prototype.isPartOfShape=function(e){return this._cells.some(function(t){return t.X===e.X&&t.Y===e.Y})},e.prototype.move=function(e,t){void 0===e&&(e=0),void 0===t&&(t=0),this._origin&&this._origin.addToX(e).addToY(t),this.cells.forEach(function(n){return n.addToX(e).addToY(t)})},e}();t.Shape=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2dhbWUuY29uZmlnLnRzIiwid2VicGFjazovLy8uL3NyYy9nZW9tL1ZlY3RvcjIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0NhbnZhcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5wdXQvS2V5Ym9hcmQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NoYXBlL1NoYXBlVHlwZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvR2FtZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvR2FtZVdvcmxkLnRzIiwid2VicGFjazovLy8uL3NyYy9tYXAvR2FtZU1hcC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFwL0NlbGwudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NoYXBlL1NoYXBlRmFjdG9yeS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2hhcGUvU2hhcGUudHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJHQU1FX0NPTkZJRyIsIlVQREFURV9BRlRFUl9YX0ZSQU1FUyIsIkdBTUVfV0lEVEgiLCJHQU1FX0hFSUdIVCIsIkNBTlZBU19NSU5fV0lEVEgiLCJDQU5WQVNfTUlOX0hFSUdIVCIsIkNFTExfU0laRSIsIk5FWFRfU0hBUEVfQ0VMTF9TSVpFIiwiU1RST0tFX1dJRFRIIiwiQkFDS0dST1VORF9DT0xPUiIsIlNUUk9LRV9DT0xPUiIsIlNIQVBFX0NPTE9SUyIsIlNDT1JFX0xBQkVMX0ZPTlQiLCJORVhUX1NIQVBFX0xBQkVMX0ZPTlQiLCJHQU1FX09WRVJfTEFCRUxfRk9OVCIsIkdBTUVfT1ZFUl9ZT1VSX1NDT1JFX0xBQkVMX0ZPTlQiLCJGT05UX0NPTE9SIiwiU0NPUkVfTEFCRUwiLCJORVhUX1NIQVBFX0xBQkVMIiwiR0FNRV9PVkVSX0xBQkVMIiwiR0FNRV9PVkVSX1lPVVJfU0NPUkVfTEFCRUwiLCJORVhUX1NIQVBFX1BPU0lUSU9OIiwiWCIsIlkiLCJTQ09SRV9MQUJFTF9QT1NJVElPTiIsIkFMSUdOTUVOVCIsIk5FWFRfU0hBUEVfTEFCRUxfUE9TSVRJT04iLCJHQU1FX09WRVJfTEFCRUxfUE9TSVRJT04iLCJHQU1FX09WRVJfWU9VUl9TQ09SRV9MQUJFTF9QT1NJVElPTiIsIlNUQVJUX0tFWSIsIkxFRlRfS0VZIiwiUklHSFRfS0VZIiwiVVBfS0VZIiwiRE9XTl9LRVkiLCJEUk9QIiwiRklMTEVEX0xJTkVfQk9OVVMiLCJEUk9QUEVEX1NIQVBFX0JPTlVTIiwiTE9XRVJFRF9TSEFQRV9CT05VUyIsIlZlY3RvcjIiLCJ4IiwieSIsInRoaXMiLCJfeCIsIl95IiwiYWRkWCIsImFkZFRvWCIsImFkZFkiLCJhZGRUb1kiLCJhZGQiLCJnYW1lX2NvbmZpZ18xIiwiVmVjdG9yMl8xIiwiQ2FudmFzMkQiLCJjYW52YXMiLCJjYW52YXNDb250YWluZXIiLCJfY2FudmFzQ29udGFpbmVyIiwiX2NhbnZhcyIsIl9jb250ZXh0IiwiZ2V0Q29udGV4dCIsInJlc2l6ZUNhbnZhcyIsImZpeERQSSIsInNjYWxlIiwiX2RwaSIsIndpbmRvdyIsImRldmljZVBpeGVsUmF0aW8iLCJzdHlsZV9oZWlnaHQiLCJnZXRDb21wdXRlZFN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInNsaWNlIiwic3R5bGVfd2lkdGgiLCJzZXRBdHRyaWJ1dGUiLCJ0b1N0cmluZyIsIm9yaWdpbmFsQ2FudmFzV2lkdGgiLCJvcmlnaW5hbENhbnZhc0hlaWdodCIsIndpZHRoVG9IZWlnaHQiLCJuZXdIZWlnaHQiLCJpbm5lckhlaWdodCIsIm5ld1dpZHRoIiwiaW5uZXJXaWR0aCIsInN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJjbGVhciIsImNsZWFyUmVjdCIsImRyYXdCYWNrZ3JvdW5kIiwiYmFja2dyb3VuZENvbG9yIiwic2F2ZSIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwicmVzdG9yZSIsImRyYXdSZWN0IiwicG9zaXRpb24iLCJmaWxsQ29sb3IiLCJzdHJva2VDb2xvciIsImxpbmVXaWR0aCIsInN0cm9rZVN0eWxlIiwic3Ryb2tlUmVjdCIsImRyYXdUZXh0IiwidGV4dCIsImZvbnQiLCJjb2xvciIsInRleHRBbGlnbiIsImZpbGxUZXh0IiwiZHJhd1JlY3RBdENlbGwiLCJqIiwiY2VsbFNpemUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY29udGFpbmVyIiwiY2FudmFzMkQiLCJhZGRFdmVudExpc3RlbmVyIiwiS2V5Ym9hcmQiLCJfdGhpcyIsIl9rZXlzUHJlc3NlZCIsImUiLCJrZXlEb3duIiwiZXZlbnQiLCJrZXlDb2RlIiwicmVzZXQiLCJpc1ByZXNzZWQiLCJrZXlib2FyZCIsIlNoYXBlVHlwZSIsInRldHJpcyIsIkdhbWVXb3JsZF8xIiwiS2V5Ym9hcmRfMSIsIkNhbnZhc18xIiwiZ2FtZUxvb3AiLCJnYW1lT3ZlciIsInNjb3JlIiwiaW5pdCIsInVwZGF0ZSIsImRyYXciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJHYW1lV29ybGQiLCJTaGFwZVR5cGVfMSIsIkdhbWVNYXBfMSIsIlNoYXBlRmFjdG9yeV8xIiwiX21vdmluZ1NoYXBlIiwiX3NoYXBlc1F1ZXVlIiwiX3NoYXBlVHlwZXMiLCJJIiwiSiIsIkwiLCJPIiwiUyIsIloiLCJUIiwiX3NoYXBlRmFjdG9yeSIsIlNoYXBlRmFjdG9yeSIsIl9tYXAiLCJHYW1lTWFwIiwiX2dhbWVPdmVyIiwiX3Njb3JlIiwiaW5jcmVhc2VTY29yZSIsInRvQWRkIiwiZHJvcFNoYXBlIiwibnVtT2ZDZWxscyIsImxvd2VyU2hhcGUiLCJoYW5kbGVJbnB1dCIsInRvTW92ZVgiLCJjZWxsc0Ryb3BwZWQiLCJyb3RhdGVTaGFwZSIsImNlbGxzIiwic29tZSIsImNlbGwiLCJuZXh0WCIsInBhcnRPZlNoYXBlIiwiaXNQYXJ0T2ZTaGFwZSIsImlzQ2VsbEZpbGxlZCIsImNsZWFyU2hhcGUiLCJtb3ZlIiwiY29sb3JTaGFwZSIsIm9yaWdpbiIsIm5ld1NoYXBlIiwiX2kiLCJfYSIsImxlbmd0aCIsIm5ld1giLCJuZXdZIiwibmV3Q2VsbCIsInB1c2giLCJldmVyeSIsImlzSW5NYXAiLCJyZWFjaGVkQm90dG9tIiwibmV4dFkiLCJoYW5kbGVGaWxsZWRMaW5lcyIsImZpbGxlZExpbmVzQ291bnQiLCJyZW1vdmVGaWxsZWRMaW5lcyIsIl91cGRhdGVFdmVyeVhGcmFtZXMiLCJjaGVja0ZvckdhbWVPdmVyIiwiYW55RmlsbGVkT25Sb3ciLCJnZW5lcmF0ZVJhbmRvbVNoYXBlIiwicmFuZG9tU2hhcGVUeXBlSW5kZXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJzaGFwZUNvbG9yIiwiY3JlYXRlU2hhcGUiLCJkcmF3U2hhcGVzSW5RdWV1ZSIsInNoYXBlIiwidGhpc18xIiwiaW5kZXhGcm9tRW5kIiwiZGVtb1NoYXBlIiwic2hhcGVUeXBlIiwiZm9yRWFjaCIsImRyYXdTY29yZSIsIl9mcmFtZSIsInVuc2hpZnQiLCJwb3AiLCJDZWxsXzEiLCJfd2lkdGgiLCJfaGVpZ2h0IiwiQ2VsbCIsImZpbGxlZCIsImNsZWFyQ2VsbCIsImNvbG9yQ2VsbCIsInJvdyIsInNwbGljZSIsIm5ld1JvdyIsIl9maWxsZWQiLCJfY29sb3IiLCJ2IiwiU2hhcGVfMSIsIm1hcmdpbiIsInNoYXBlT3JpZ2luIiwic2hhcGVDZWxscyIsIlNoYXBlIiwiX2NlbGxzIiwiX29yaWdpbiIsIl9zaGFwZVR5cGUi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QUFBMkwsT0FBb0IsR0FDcEIzTCxLQUFBb0wsT0FBaUIsR0FDakJwTCxLQUFBNEwsUUFBbUIsS0EyQnZCNUwsS0FBSzZMLFdBQWExQixFQUNsQm5LLEtBQUsyTCxPQUFTakUsRUFDZDFILEtBQUtvTCxPQUFTeEgsRUFDZDVELEtBQUs0TCxRQUFVeEQsRUFnQnZCLE9BekNJbk0sT0FBQUMsZUFBV3dQLEVBQUF2TyxVQUFBLFlBQVMsS0FBcEIsV0FDSSxPQUFPNkMsS0FBSzZMLDRDQUdoQjVQLE9BQUFDLGVBQVd3UCxFQUFBdk8sVUFBQSxRQUFLLEtBQWhCLFdBQ0ksT0FBTzZDLEtBQUsyTCxZQUVoQixTQUFpQmpFLEdBQ2IxSCxLQUFLMkwsT0FBU2pFLG1DQUdsQnpMLE9BQUFDLGVBQVd3UCxFQUFBdk8sVUFBQSxTQUFNLEtBQWpCLFdBQ0ksT0FBTzZDLEtBQUs0TCx5Q0FHaEIzUCxPQUFBQyxlQUFXd1AsRUFBQXZPLFVBQUEsUUFBSyxLQUFoQixXQUNJLE9BQU82QyxLQUFLb0wsd0NBY1RNLEVBQUF2TyxVQUFBNEssY0FBUCxTQUFxQkgsR0FDakIsT0FBTzVILEtBQUsyTCxPQUFPaEUsS0FBSyxTQUFBbUUsR0FBYSxPQUFBQSxFQUFVak4sSUFBTStJLEVBQUsvSSxHQUFLaU4sRUFBVWhOLElBQU04SSxFQUFLOUksS0FHakY0TSxFQUFBdk8sVUFBQStLLEtBQVAsU0FBWXBJLEVBQWVDLFFBQWYsSUFBQUQsTUFBQSxRQUFlLElBQUFDLE1BQUEsR0FDcEJDLEtBQUs0TCxTQUNKNUwsS0FBSzRMLFFBQVF4TCxPQUFPTixHQUFHUSxPQUFPUCxHQUdsQ0MsS0FBSzBILE1BQU0wQyxRQUFRLFNBQUF4QyxHQUFRLE9BQUFBLEVBQUt4SCxPQUFPTixHQUFHUSxPQUFPUCxNQUV6RDJMLEVBcERBLEdBQWFyUSxFQUFBcVEiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDUpO1xuIiwiZXhwb3J0IGNvbnN0IEdBTUVfQ09ORklHOiBhbnkgPSB7XG4gIC8vIFBIWVNJQ1NcbiAgVVBEQVRFX0FGVEVSX1hfRlJBTUVTOiAxMCxcblxuICAvLyBTSVpJTkdcbiAgR0FNRV9XSURUSDogMTUsIC8vIOqwgOuhnCDsubjsiJhcbiAgR0FNRV9IRUlHSFQ6IDIwLCAvLyDshLjroZwg7Lm47IiYXG4gIENBTlZBU19NSU5fV0lEVEg6IDMwMCxcbiAgQ0FOVkFTX01JTl9IRUlHSFQ6IDQwMCxcbiAgQ0VMTF9TSVpFOiAyMCxcbiAgTkVYVF9TSEFQRV9DRUxMX1NJWkU6IDUsXG4gIFNUUk9LRV9XSURUSDogMC41LFxuXG4gIC8vIENPTE9SU1xuICBCQUNLR1JPVU5EX0NPTE9SOiAnIzI4MzYzQicsXG4gIFNUUk9LRV9DT0xPUjogJ2JsYWNrJyxcbiAgU0hBUEVfQ09MT1JTOiBbJyNGOUIzOEYnLCAnI0JGNkM4NicsICcjODRBRjlDJywgJyM2RDVDODAnLCAnI0ZGQTNEMCcsICcjNDM5RjlFJywgJyNFRjVGM0MnXSxcblxuICAvLyBURVhUU1xuICBTQ09SRV9MQUJFTF9GT05UOiAnMTBweCBDb21pYyBTYW5zIE1TJyxcbiAgTkVYVF9TSEFQRV9MQUJFTF9GT05UOiAnMTBweCBDb21pYyBTYW5zIE1TJyxcbiAgR0FNRV9PVkVSX0xBQkVMX0ZPTlQ6ICcyNXB4IENvbWljIFNhbnMgTVMnLFxuICBHQU1FX09WRVJfWU9VUl9TQ09SRV9MQUJFTF9GT05UOiAnMTVweCBDb21pYyBTYW5zIE1TJyxcbiAgRk9OVF9DT0xPUjogJ3doaXRlJyxcbiAgU0NPUkVfTEFCRUw6ICdTY29yZTogJyxcbiAgTkVYVF9TSEFQRV9MQUJFTDogJ05leHQgU2hhcGU6ICcsXG4gIEdBTUVfT1ZFUl9MQUJFTDogJ0dhbWUgT3ZlciEnLFxuICBHQU1FX09WRVJfWU9VUl9TQ09SRV9MQUJFTDogJ1lvdXIgU2NvcmU6ICcsXG5cbiAgLy8gUE9TSVRJT05TXG4gIC8vIOyXrOq4sOyEnCBhbGlnbm1lbnQg64qUIHgsIHkg6rCAIOq4gOyekOydmCDslrTrlJQg6riw7KSA7Jy866GcIOyeiOuKlOyngOulvCDsoJXsnZjtlZzri6QuIGxlZnQg66W8IOyYiOulvCDrk6TrqbQsIHgsIHkg7KeA7KCQ7Jy866Gc67aA7YSwIOyYpOuluOyqveycvOuhnCDquIDsnbQg7J6I7J2EIOqyg+ydtOuLpC5cbiAgTkVYVF9TSEFQRV9QT1NJVElPTjogeyBYOiAyODMsIFk6IDYgfSxcbiAgU0NPUkVfTEFCRUxfUE9TSVRJT046IHsgWDogNSwgWTogMTMsIEFMSUdOTUVOVDogJ2xlZnQnIH0sXG4gIE5FWFRfU0hBUEVfTEFCRUxfUE9TSVRJT046IHsgWDogMjE1LCBZOiAxMywgQUxJR05NRU5UOiAnbGVmdCcgfSxcbiAgR0FNRV9PVkVSX0xBQkVMX1BPU0lUSU9OOiB7IFg6IDE1MCwgWTogMjAwLCBBTElHTk1FTlQ6ICdjZW50ZXInIH0sXG4gIEdBTUVfT1ZFUl9ZT1VSX1NDT1JFX0xBQkVMX1BPU0lUSU9OOiB7IFg6IDE1MCwgWTogMjM1LCBBTElHTk1FTlQ6ICdjZW50ZXInIH0sXG5cbiAgLy8gS0VZU1xuICBTVEFSVF9LRVk6IDMyLFxuICBMRUZUX0tFWTogMzcsXG4gIFJJR0hUX0tFWTogMzksXG4gIFVQX0tFWTogMzgsXG4gIERPV05fS0VZOiA0MCxcbiAgRFJPUDogMTMsXG5cbiAgLy8gUlVMRVNcbiAgRklMTEVEX0xJTkVfQk9OVVM6IDEwMCxcbiAgRFJPUFBFRF9TSEFQRV9CT05VUzogMixcbiAgTE9XRVJFRF9TSEFQRV9CT05VUzogMVxufVxuIiwiXG5leHBvcnQgY2xhc3MgVmVjdG9yMiB7XG5cbiAgICBcbiAgICBzdGF0aWMgZ2V0IFplcm8oKSB7XG4gICAgICAgIHJldHVybiBuZXcgVmVjdG9yMigwLCAwKTtcbiAgICB9XG5cbi8vLS0tLS0tTWVtYmVycy0tLS0tLS8vXG5cbiAgICBwcml2YXRlIF94OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfeTogbnVtYmVyO1xuXG4gICAgLy8tLS0tLS1Db25zdHJ1Y3Rvci0tLS0tLS8vXG5cbiAgICBjb25zdHJ1Y3Rvcih4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgICAgICB0aGlzLl94ID0geDtcbiAgICAgICAgdGhpcy5feSA9IHk7XG4gICAgfVxuXG4gICAgLy8tLS0tLS1Qcm9wZXJ0aWVzLS0tLS0tLy9cblxuICAgIGdldCBYKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5feDtcbiAgICB9XG4gICAgXG4gICAgZ2V0IFkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl95O1xuICAgIH1cblxuICAgIC8vLS0tLS0tUHVibGljIE1ldGhvZHMtLS0tLS0vL1xuXG4gICAgcHVibGljIGFkZFgoeDogbnVtYmVyKTogVmVjdG9yMiB7XG4gICAgICAgIHJldHVybiBuZXcgVmVjdG9yMih0aGlzLl94LCB0aGlzLl95KS5hZGRUb1goeCk7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZFkoeTogbnVtYmVyKTogVmVjdG9yMiB7XG4gICAgICAgIHJldHVybiBuZXcgVmVjdG9yMih0aGlzLl94LCB0aGlzLl95KS5hZGRUb1koeSk7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZFRvWCh4OiBudW1iZXIpOiBWZWN0b3IyIHtcbiAgICAgICAgdGhpcy5feCArPSB4O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkVG9ZKHk6IG51bWJlcik6IFZlY3RvcjIge1xuICAgICAgICB0aGlzLl95ICs9IHk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBhZGQoeCA6IG51bWJlciwgeTogbnVtYmVyKTogVmVjdG9yMntcbiAgICAgICAgdGhpcy5hZGRUb1goeCk7XG4gICAgICAgIHRoaXMuYWRkVG9ZKHkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59IiwiaW1wb3J0IHsgR0FNRV9DT05GSUcgfSBmcm9tICcuL2dhbWUuY29uZmlnJ1xuaW1wb3J0IHsgVmVjdG9yMiB9IGZyb20gJy4vZ2VvbS9WZWN0b3IyJ1xuXG5jbGFzcyBDYW52YXMyRCB7XG4gIC8vLS0tLS0tTWVtYmVycy0tLS0tLS8vXG5cbiAgcHJpdmF0ZSBfY2FudmFzQ29udGFpbmVyOiBIVE1MRWxlbWVudFxuICBwcml2YXRlIF9jYW52YXM6IEhUTUxDYW52YXNFbGVtZW50XG4gIHByaXZhdGUgX2NvbnRleHQ6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRFxuICBwcml2YXRlIF9kcGk6IG51bWJlclxuXG4gIC8vLS0tLS0tQ29uc3RydWN0b3ItLS0tLS0vL1xuXG4gIGNvbnN0cnVjdG9yKGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQsIGNhbnZhc0NvbnRhaW5lcjogSFRNTEVsZW1lbnQpIHtcbiAgICB0aGlzLl9jYW52YXNDb250YWluZXIgPSBjYW52YXNDb250YWluZXJcbiAgICB0aGlzLl9jYW52YXMgPSBjYW52YXNcbiAgICB0aGlzLl9jb250ZXh0ID0gdGhpcy5fY2FudmFzLmdldENvbnRleHQoJzJkJylcbiAgICB0aGlzLnJlc2l6ZUNhbnZhcygpXG4gIH1cblxuICAvLy0tLS0tLVByaXZhdGUgTWV0aG9kcy0tLS0tLS8vXG5cbiAgcHJpdmF0ZSBmaXhEUEkoc2NhbGU6IFZlY3RvcjIpIHtcbiAgICAvL2dldCBEUElcbiAgICB0aGlzLl9kcGkgPSB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb1xuXG4gICAgLy9nZXQgQ1NTIGhlaWdodFxuICAgIC8vdGhlICsgcHJlZml4IGNhc3RzIGl0IHRvIGFuIGludGVnZXJcbiAgICAvL3RoZSBzbGljZSBtZXRob2QgZ2V0cyByaWQgb2YgXCJweFwiXG4gICAgbGV0IHN0eWxlX2hlaWdodDogbnVtYmVyID0gK2dldENvbXB1dGVkU3R5bGUodGhpcy5fY2FudmFzKS5nZXRQcm9wZXJ0eVZhbHVlKCdoZWlnaHQnKS5zbGljZSgwLCAtMilcblxuICAgIC8vZ2V0IENTUyB3aWR0aFxuICAgIGxldCBzdHlsZV93aWR0aDogbnVtYmVyID0gK2dldENvbXB1dGVkU3R5bGUodGhpcy5fY2FudmFzKS5nZXRQcm9wZXJ0eVZhbHVlKCd3aWR0aCcpLnNsaWNlKDAsIC0yKVxuXG4gICAgLy9zY2FsZSB0aGUgY2FudmFzXG4gICAgdGhpcy5fY2FudmFzLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgKHN0eWxlX2hlaWdodCAqIHRoaXMuX2RwaSkudG9TdHJpbmcoKSlcbiAgICB0aGlzLl9jYW52YXMuc2V0QXR0cmlidXRlKCd3aWR0aCcsIChzdHlsZV93aWR0aCAqIHRoaXMuX2RwaSkudG9TdHJpbmcoKSlcblxuICAgIHRoaXMuX2NvbnRleHQuc2NhbGUodGhpcy5fZHBpICogc2NhbGUuWCwgdGhpcy5fZHBpICogc2NhbGUuWSlcbiAgfVxuXG4gIC8vLS0tLS0tUHVibGljIE1ldGhvZHMtLS0tLS0vL1xuXG4gIHB1YmxpYyByZXNpemVDYW52YXMoKTogdm9pZCB7XG4gICAgY29uc3Qgb3JpZ2luYWxDYW52YXNXaWR0aCA9IEdBTUVfQ09ORklHLkdBTUVfV0lEVEggKiBHQU1FX0NPTkZJRy5DRUxMX1NJWkVcbiAgICBjb25zdCBvcmlnaW5hbENhbnZhc0hlaWdodCA9IEdBTUVfQ09ORklHLkdBTUVfSEVJR0hUICogR0FNRV9DT05GSUcuQ0VMTF9TSVpFXG4gICAgY29uc3Qgd2lkdGhUb0hlaWdodDogbnVtYmVyID0gb3JpZ2luYWxDYW52YXNXaWR0aCAvIG9yaWdpbmFsQ2FudmFzSGVpZ2h0XG5cbiAgICBsZXQgbmV3SGVpZ2h0OiBudW1iZXIgPVxuICAgICAgd2luZG93LmlubmVySGVpZ2h0IC0gMTAgPj0gR0FNRV9DT05GSUcuQ0FOVkFTX01JTl9IRUlHSFQgPyB3aW5kb3cuaW5uZXJIZWlnaHQgLSAxMCA6IEdBTUVfQ09ORklHLkNBTlZBU19NSU5fSEVJR0hUXG4gICAgbGV0IG5ld1dpZHRoOiBudW1iZXIgPVxuICAgICAgd2luZG93LmlubmVyV2lkdGggPj0gR0FNRV9DT05GSUcuQ0FOVkFTX01JTl9XSURUSCA/IHdpbmRvdy5pbm5lcldpZHRoIDogR0FNRV9DT05GSUcuQ0FOVkFTX01JTl9XSURUSFxuXG4gICAgY29uc3QgbmV3V2lkdGhUb0hlaWdodDogbnVtYmVyID0gbmV3V2lkdGggLyBuZXdIZWlnaHRcblxuICAgIG5ld1dpZHRoID0gbmV3V2lkdGhUb0hlaWdodCA+IHdpZHRoVG9IZWlnaHQgPyBuZXdIZWlnaHQgKiB3aWR0aFRvSGVpZ2h0IDogbmV3V2lkdGggLyB3aWR0aFRvSGVpZ2h0XG5cbiAgICB0aGlzLl9jYW52YXNDb250YWluZXIuc3R5bGUud2lkdGggPSBuZXdXaWR0aCArICdweCdcbiAgICB0aGlzLl9jYW52YXNDb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gbmV3SGVpZ2h0ICsgJ3B4J1xuICAgIHRoaXMuX2NhbnZhc0NvbnRhaW5lci5zdHlsZS5tYXJnaW5MZWZ0ID0gKHdpbmRvdy5pbm5lcldpZHRoIC0gMjAgLSBuZXdXaWR0aCkgLyAyICsgJ3B4J1xuICAgIHRoaXMuX2NhbnZhc0NvbnRhaW5lci5zdHlsZS5tYXJnaW5SaWdodCA9ICh3aW5kb3cuaW5uZXJXaWR0aCAtIDIwIC0gbmV3V2lkdGgpIC8gMiArICdweCdcblxuICAgIGNvbnN0IHNjYWxlID0gbmV3IFZlY3RvcjIobmV3V2lkdGggLyBvcmlnaW5hbENhbnZhc1dpZHRoLCBuZXdIZWlnaHQgLyBvcmlnaW5hbENhbnZhc0hlaWdodClcblxuICAgIHRoaXMuX2NhbnZhcy53aWR0aCA9IG5ld1dpZHRoXG4gICAgdGhpcy5fY2FudmFzLmhlaWdodCA9IG5ld0hlaWdodFxuXG4gICAgdGhpcy5maXhEUEkoc2NhbGUpXG4gIH1cblxuICBwdWJsaWMgY2xlYXIoKTogdm9pZCB7XG4gICAgdGhpcy5fY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5fY2FudmFzLndpZHRoLCB0aGlzLl9jYW52YXMuaGVpZ2h0KVxuICB9XG5cbiAgLy8gbGluZVdpZHRoLCBzdHJva2VTdHlsZSwgZmlsbFN0eWxlIOuTseydhCDrs4Dqsr3tlZwg7ZuEIOydtOyghOydmCDsiqTtg4DsnbzroZwg64+M66Ck64aT6riwIOychO2VtOyEnCBzYXZlLCByZXN0b3JlIOyCrOyaqVxuICAvLyDqt7jrprzsnYQg67CU6r6464qU6rKMIOyVhOuLiOudvCDrtpPsnYQg67CU6r6464qUIOqyg+ydtOuLpCFcbiAgcHVibGljIGRyYXdCYWNrZ3JvdW5kKGJhY2tncm91bmRDb2xvcjogc3RyaW5nKSB7XG4gICAgdGhpcy5fY29udGV4dC5zYXZlKClcbiAgICB0aGlzLl9jb250ZXh0LmZpbGxTdHlsZSA9IGJhY2tncm91bmRDb2xvclxuICAgIHRoaXMuX2NvbnRleHQuZmlsbFJlY3QoMCwgMCwgdGhpcy5fY2FudmFzLndpZHRoLCB0aGlzLl9jYW52YXMuaGVpZ2h0KVxuICAgIHRoaXMuX2NvbnRleHQucmVzdG9yZSgpXG4gIH1cblxuICBwdWJsaWMgZHJhd1JlY3QocG9zaXRpb246IFZlY3RvcjIsIGZpbGxDb2xvcjogc3RyaW5nLCBzdHJva2VDb2xvcjogc3RyaW5nLCB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuX2NvbnRleHQuc2F2ZSgpXG4gICAgdGhpcy5fY29udGV4dC5saW5lV2lkdGggPSBHQU1FX0NPTkZJRy5TVFJPS0VfV0lEVEhcbiAgICB0aGlzLl9jb250ZXh0LnN0cm9rZVN0eWxlID0gc3Ryb2tlQ29sb3JcbiAgICB0aGlzLl9jb250ZXh0LmZpbGxTdHlsZSA9IGZpbGxDb2xvclxuICAgIHRoaXMuX2NvbnRleHQuZmlsbFJlY3QocG9zaXRpb24uWCwgcG9zaXRpb24uWSwgd2lkdGgsIGhlaWdodClcbiAgICB0aGlzLl9jb250ZXh0LnN0cm9rZVJlY3QocG9zaXRpb24uWCwgcG9zaXRpb24uWSwgd2lkdGgsIGhlaWdodClcbiAgICB0aGlzLl9jb250ZXh0LnJlc3RvcmUoKVxuICB9XG5cbiAgcHVibGljIGRyYXdUZXh0KHRleHQ6IHN0cmluZywgZm9udDogc3RyaW5nLCBjb2xvcjogc3RyaW5nLCBwb3NpdGlvbjogVmVjdG9yMiwgdGV4dEFsaWduOiBzdHJpbmcgPSAnbGVmdCcpOiB2b2lkIHtcbiAgICB0aGlzLl9jb250ZXh0LnNhdmUoKVxuICAgIHRoaXMuX2NvbnRleHQuZmlsbFN0eWxlID0gY29sb3JcbiAgICB0aGlzLl9jb250ZXh0LmZvbnQgPSBmb250XG4gICAgdGhpcy5fY29udGV4dC50ZXh0QWxpZ24gPSB0ZXh0QWxpZ24gYXMgQ2FudmFzVGV4dEFsaWduXG4gICAgdGhpcy5fY29udGV4dC5maWxsVGV4dCh0ZXh0LCBwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZKVxuICAgIHRoaXMuX2NvbnRleHQucmVzdG9yZSgpXG4gIH1cblxuICBwdWJsaWMgZHJhd1JlY3RBdENlbGwoaTogbnVtYmVyLCBqOiBudW1iZXIsIGZpbGxDb2xvcjogc3RyaW5nLCBzdHJva2VDb2xvcjogc3RyaW5nLCBjZWxsU2l6ZTogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5kcmF3UmVjdChuZXcgVmVjdG9yMihqICogY2VsbFNpemUsIGkgKiBjZWxsU2l6ZSksIGZpbGxDb2xvciwgc3Ryb2tlQ29sb3IsIGNlbGxTaXplLCBjZWxsU2l6ZSlcbiAgfVxufVxuXG5jb25zdCBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NjcmVlbicpIGFzIEhUTUxDYW52YXNFbGVtZW50XG5jb25zdCBjb250YWluZXI6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NjcmVlbicpIGFzIEhUTUxFbGVtZW50XG5leHBvcnQgY29uc3QgY2FudmFzMkQgPSBuZXcgQ2FudmFzMkQoY2FudmFzLCBjb250YWluZXIpXG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBjYW52YXMyRC5yZXNpemVDYW52YXMuYmluZChjYW52YXMyRCkpXG4iLCJcbmNsYXNzIEtleWJvYXJkIHtcblxuICAgIC8vLS0tLS0tTWVtYmVycy0tLS0tLS8vXG5cbiAgICBfa2V5c1ByZXNzZWQgOiBib29sZWFuW10gPSBbXTtcbiAgICBcbiAgICAvLy0tLS0tLUNvbnN0cnVjdG9yLS0tLS0tLy9cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHt0aGlzLmtleURvd24oZSkgfSk7XG4gICAgfVxuXG4gICAgLy8tLS0tLS1Qcml2YXRlIE1ldGhvZHMtLS0tLS0vL1xuXG4gICAgcHJpdmF0ZSBrZXlEb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KSA6IHZvaWR7XG4gICAgICAgIHRoaXMuX2tleXNQcmVzc2VkW2V2ZW50LmtleUNvZGVdID0gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLy0tLS0tLVB1YmxpYyBNZXRob2RzLS0tLS0tLy9cblxuICAgIHB1YmxpYyByZXNldCgpIDogdm9pZCB7XG4gICAgICAgIHRoaXMuX2tleXNQcmVzc2VkID0gW107XG4gICAgfVxuXG4gICAgcHVibGljIGlzUHJlc3NlZChrZXlDb2RlOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleXNQcmVzc2VkW2tleUNvZGVdO1xuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGtleWJvYXJkID0gbmV3IEtleWJvYXJkKCk7IiwiZXhwb3J0IGVudW0gU2hhcGVUeXBlIHtcbiAgICBJLFxuICAgIEosXG4gICAgTCxcbiAgICBTLFxuICAgIFosXG4gICAgTyxcbiAgICBUXG59IiwiaW1wb3J0IHsgR2FtZVdvcmxkIH0gZnJvbSAnLi9HYW1lV29ybGQnXG5pbXBvcnQgeyBrZXlib2FyZCB9IGZyb20gJy4vaW5wdXQvS2V5Ym9hcmQnXG5pbXBvcnQgeyBjYW52YXMyRCB9IGZyb20gJy4vQ2FudmFzJ1xuaW1wb3J0IHsgR0FNRV9DT05GSUcgfSBmcm9tICcuL2dhbWUuY29uZmlnJ1xuXG5sZXQgdGV0cmlzOiBHYW1lV29ybGRcblxuZnVuY3Rpb24gc3RhcnQoKTogdm9pZCB7XG4gIHRldHJpcyA9IG5ldyBHYW1lV29ybGQoR0FNRV9DT05GSUcuR0FNRV9XSURUSCwgR0FNRV9DT05GSUcuR0FNRV9IRUlHSFQpXG4gIGdhbWVMb29wKClcbn1cblxuZnVuY3Rpb24gZ2FtZU92ZXJTY3JlZW4oKTogdm9pZCB7XG4gIGNhbnZhczJELmNsZWFyKClcbiAgY2FudmFzMkQuZHJhd0JhY2tncm91bmQoR0FNRV9DT05GSUcuQkFDS0dST1VORF9DT0xPUilcbiAgY2FudmFzMkQuZHJhd1RleHQoXG4gICAgR0FNRV9DT05GSUcuR0FNRV9PVkVSX0xBQkVMLFxuICAgIEdBTUVfQ09ORklHLkdBTUVfT1ZFUl9MQUJFTF9GT05ULFxuICAgIEdBTUVfQ09ORklHLkZPTlRfQ09MT1IsXG4gICAgR0FNRV9DT05GSUcuR0FNRV9PVkVSX0xBQkVMX1BPU0lUSU9OLFxuICAgIEdBTUVfQ09ORklHLkdBTUVfT1ZFUl9MQUJFTF9QT1NJVElPTi5BTElHTk1FTlRcbiAgKVxuXG4gIGNhbnZhczJELmRyYXdUZXh0KFxuICAgIEdBTUVfQ09ORklHLkdBTUVfT1ZFUl9ZT1VSX1NDT1JFX0xBQkVMICsgdGV0cmlzLnNjb3JlLFxuICAgIEdBTUVfQ09ORklHLkdBTUVfT1ZFUl9ZT1VSX1NDT1JFX0xBQkVMX0ZPTlQsXG4gICAgR0FNRV9DT05GSUcuRk9OVF9DT0xPUixcbiAgICBHQU1FX0NPTkZJRy5HQU1FX09WRVJfWU9VUl9TQ09SRV9MQUJFTF9QT1NJVElPTixcbiAgICBHQU1FX0NPTkZJRy5HQU1FX09WRVJfTEFCRUxfUE9TSVRJT04uQUxJR05NRU5UXG4gIClcblxuICBpZiAoa2V5Ym9hcmQuaXNQcmVzc2VkKEdBTUVfQ09ORklHLlNUQVJUX0tFWSkpIHtcbiAgICB0ZXRyaXMuaW5pdCgpXG4gIH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlKCk6IHZvaWQge1xuICB0ZXRyaXMudXBkYXRlKClcbn1cblxuZnVuY3Rpb24gZHJhdygpOiB2b2lkIHtcbiAgY2FudmFzMkQuY2xlYXIoKVxuICBjYW52YXMyRC5kcmF3QmFja2dyb3VuZChHQU1FX0NPTkZJRy5CQUNLR1JPVU5EX0NPTE9SKVxuICB0ZXRyaXMuZHJhdygpXG59XG5cbmZ1bmN0aW9uIGdhbWVMb29wKCk6IHZvaWQge1xuICBpZiAodGV0cmlzLmdhbWVPdmVyKSB7XG4gICAgZ2FtZU92ZXJTY3JlZW4oKVxuICB9IGVsc2Uge1xuICAgIHVwZGF0ZSgpXG4gICAgZHJhdygpXG4gIH1cbiAga2V5Ym9hcmQucmVzZXQoKVxuICAvLyAx7LSI7JeQIDYw67KIIOygleuPhCBnYW1lTG9vcCDtmLjstpwsIOymiSBGUFMgPSA2MFxuICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZ2FtZUxvb3ApXG59XG5cbnN0YXJ0KClcbiIsImltcG9ydCB7IEdBTUVfQ09ORklHIH0gZnJvbSAnLi9nYW1lLmNvbmZpZydcbmltcG9ydCB7IGtleWJvYXJkIH0gZnJvbSAnLi9pbnB1dC9LZXlib2FyZCdcbmltcG9ydCB7IFZlY3RvcjIgfSBmcm9tICcuL2dlb20vVmVjdG9yMidcbmltcG9ydCB7IGNhbnZhczJEIH0gZnJvbSAnLi9DYW52YXMnXG5pbXBvcnQgeyBTaGFwZSB9IGZyb20gJy4vc2hhcGUvU2hhcGUnXG5pbXBvcnQgeyBTaGFwZVR5cGUgfSBmcm9tICcuL3NoYXBlL1NoYXBlVHlwZSdcbmltcG9ydCB7IEdhbWVNYXAgfSBmcm9tICcuL21hcC9HYW1lTWFwJ1xuaW1wb3J0IHsgU2hhcGVGYWN0b3J5IH0gZnJvbSAnLi9zaGFwZS9TaGFwZUZhY3RvcnknXG5cbmV4cG9ydCBjbGFzcyBHYW1lV29ybGQge1xuICBcbiAgcHJpdmF0ZSBfZnJhbWU6IG51bWJlclxuICBwcml2YXRlIF9nYW1lT3ZlcjogYm9vbGVhblxuLy8tLS0tLS1NZW1iZXJzLS0tLS0tLy9cblxuICBwcml2YXRlIF9tYXA6IEdhbWVNYXBcbiAgcHJpdmF0ZSBfdXBkYXRlRXZlcnlYRnJhbWVzOiBudW1iZXJcbiAgcHJpdmF0ZSBfbW92aW5nU2hhcGU6IFNoYXBlID0gbnVsbFxuICBwcml2YXRlIF9zaGFwZXNRdWV1ZTogU2hhcGVbXSA9IFtdXG4gIHByaXZhdGUgX3Njb3JlOiBudW1iZXJcbiAgcHJpdmF0ZSBfc2hhcGVGYWN0b3J5OiBTaGFwZUZhY3RvcnlcblxuICBwcml2YXRlIF9zaGFwZVR5cGVzOiBTaGFwZVR5cGVbXSA9IFtcbiAgICBTaGFwZVR5cGUuSSxcbiAgICBTaGFwZVR5cGUuSixcbiAgICBTaGFwZVR5cGUuTCxcbiAgICBTaGFwZVR5cGUuTyxcbiAgICBTaGFwZVR5cGUuUyxcbiAgICBTaGFwZVR5cGUuWixcbiAgICBTaGFwZVR5cGUuVFxuICBdXG5cbiAgLy8tLS0tLS1Qcm9wZXJ0aWVzLS0tLS0tLy9cblxuICBwdWJsaWMgZ2V0IGdhbWVPdmVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9nYW1lT3ZlclxuICB9XG5cbiAgcHVibGljIGdldCBzY29yZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9zY29yZVxuICB9XG5cbiAgLy8tLS0tLS1Db25zdHJ1Y3Rvci0tLS0tLS8vXG5cbiAgY29uc3RydWN0b3Iod2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIpIHtcbiAgICB0aGlzLl9zaGFwZUZhY3RvcnkgPSBuZXcgU2hhcGVGYWN0b3J5KClcbiAgICB0aGlzLl9tYXAgPSBuZXcgR2FtZU1hcCh3aWR0aCwgaGVpZ2h0KVxuICAgIHRoaXMuaW5pdCgpXG4gIH1cblxuICAvLy0tLS0tLVByaXZhdGUgTWV0aG9kcy0tLS0tLS8vXG5cbiAgcHJpdmF0ZSBpbmNyZWFzZVNjb3JlKHRvQWRkOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLl9zY29yZSArPSB0b0FkZFxuICB9XG5cbiAgcHJpdmF0ZSBkcm9wU2hhcGUoKTogbnVtYmVyIHtcbiAgICBsZXQgbnVtT2ZDZWxscyA9IDBcblxuICAgIHdoaWxlICghdGhpcy5sb3dlclNoYXBlKCkpIHtcbiAgICAgIG51bU9mQ2VsbHMrK1xuICAgIH1cbiAgICByZXR1cm4gbnVtT2ZDZWxsc1xuICB9XG5cbiAgcHJpdmF0ZSBoYW5kbGVJbnB1dCgpOiB2b2lkIHtcbiAgICBsZXQgdG9Nb3ZlWCA9IDBcblxuICAgIGlmIChrZXlib2FyZC5pc1ByZXNzZWQoR0FNRV9DT05GSUcuRFJPUCkpIHtcbiAgICAgIGxldCBjZWxsc0Ryb3BwZWQgPSB0aGlzLmRyb3BTaGFwZSgpXG4gICAgICB0aGlzLmluY3JlYXNlU2NvcmUoY2VsbHNEcm9wcGVkICogR0FNRV9DT05GSUcuRFJPUFBFRF9TSEFQRV9CT05VUylcbiAgICB9IGVsc2UgaWYgKGtleWJvYXJkLmlzUHJlc3NlZChHQU1FX0NPTkZJRy5VUF9LRVkpKSB7XG4gICAgICB0aGlzLnJvdGF0ZVNoYXBlKClcbiAgICB9IGVsc2UgaWYgKGtleWJvYXJkLmlzUHJlc3NlZChHQU1FX0NPTkZJRy5ET1dOX0tFWSkpIHtcbiAgICAgIHRoaXMubG93ZXJTaGFwZSgpXG4gICAgICB0aGlzLmluY3JlYXNlU2NvcmUoR0FNRV9DT05GSUcuTE9XRVJFRF9TSEFQRV9CT05VUylcbiAgICB9IGVsc2UgaWYgKGtleWJvYXJkLmlzUHJlc3NlZChHQU1FX0NPTkZJRy5MRUZUX0tFWSkpIHtcbiAgICAgIHRvTW92ZVggPSAtMVxuICAgIH0gZWxzZSBpZiAoa2V5Ym9hcmQuaXNQcmVzc2VkKEdBTUVfQ09ORklHLlJJR0hUX0tFWSkpIHtcbiAgICAgIHRvTW92ZVggPSAxXG4gICAgfVxuXG4gICAgaWYgKHRvTW92ZVggIT09IDApIHtcbiAgICAgIGNvbnN0IHJlYWNoZWRCb3JkZXIgPSB0aGlzLl9tb3ZpbmdTaGFwZS5jZWxscy5zb21lKChjZWxsKSA9PiB7XG4gICAgICAgIGNvbnN0IG5leHRYID0gY2VsbC5YICsgdG9Nb3ZlWFxuICAgICAgICBjb25zdCBwYXJ0T2ZTaGFwZSA9IHRoaXMuX21vdmluZ1NoYXBlLmlzUGFydE9mU2hhcGUoY2VsbC5hZGRYKHRvTW92ZVgpKVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIG5leHRYIDwgMCB8fFxuICAgICAgICAgIG5leHRYID09PSB0aGlzLl9tYXAud2lkdGggfHxcbiAgICAgICAgICAodGhpcy5fbWFwLmlzQ2VsbEZpbGxlZChuZXh0WCwgY2VsbC5ZKSAmJiAhcGFydE9mU2hhcGUpXG4gICAgICAgIClcbiAgICAgIH0pXG5cbiAgICAgIGlmICghcmVhY2hlZEJvcmRlcikge1xuICAgICAgICB0aGlzLl9tYXAuY2xlYXJTaGFwZSh0aGlzLl9tb3ZpbmdTaGFwZSlcbiAgICAgICAgdGhpcy5fbW92aW5nU2hhcGUubW92ZSh0b01vdmVYLCAwKVxuICAgICAgICB0aGlzLl9tYXAuY29sb3JTaGFwZSh0aGlzLl9tb3ZpbmdTaGFwZSlcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHJvdGF0ZVNoYXBlKCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5fbW92aW5nU2hhcGUub3JpZ2luKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBsZXQgbmV3U2hhcGUgPSBbXVxuXG4gICAgZm9yIChsZXQgY2VsbCBvZiB0aGlzLl9tb3ZpbmdTaGFwZS5jZWxscykge1xuICAgICAgbGV0IHggPSBjZWxsLlggLSB0aGlzLl9tb3ZpbmdTaGFwZS5vcmlnaW4uWFxuICAgICAgbGV0IHkgPSBjZWxsLlkgLSB0aGlzLl9tb3ZpbmdTaGFwZS5vcmlnaW4uWVxuICAgICAgbGV0IG5ld1ggPSAteVxuICAgICAgbGV0IG5ld1kgPSB4XG5cbiAgICAgIGxldCBuZXdDZWxsID0gdGhpcy5fbW92aW5nU2hhcGUub3JpZ2luLmFkZFgobmV3WCkuYWRkWShuZXdZKVxuICAgICAgbmV3U2hhcGUucHVzaChuZXdDZWxsKVxuICAgIH1cblxuICAgIGxldCBwb3NzaWJsZVJvdGF0aW9uID0gbmV3U2hhcGUuZXZlcnkoKGNlbGwpID0+IHtcbiAgICAgIGNvbnN0IHBhcnRPZlNoYXBlID0gdGhpcy5fbW92aW5nU2hhcGUuaXNQYXJ0T2ZTaGFwZShjZWxsKVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgdGhpcy5fbWFwLmlzSW5NYXAoY2VsbC5YLCBjZWxsLlkpICYmXG4gICAgICAgICghdGhpcy5fbWFwLmlzQ2VsbEZpbGxlZChjZWxsLlgsIGNlbGwuWSkgfHwgcGFydE9mU2hhcGUpXG4gICAgICApXG4gICAgfSlcblxuICAgIGlmIChwb3NzaWJsZVJvdGF0aW9uKSB7XG4gICAgICB0aGlzLl9tYXAuY2xlYXJTaGFwZSh0aGlzLl9tb3ZpbmdTaGFwZSlcbiAgICAgIHRoaXMuX21vdmluZ1NoYXBlLmNlbGxzID0gbmV3U2hhcGVcbiAgICAgIHRoaXMuX21hcC5jb2xvclNoYXBlKHRoaXMuX21vdmluZ1NoYXBlKVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgbG93ZXJTaGFwZSgpOiBib29sZWFuIHtcbiAgICBjb25zdCByZWFjaGVkQm90dG9tID0gdGhpcy5fbW92aW5nU2hhcGUuY2VsbHMuc29tZSgoY2VsbCkgPT4ge1xuICAgICAgY29uc3QgbmV4dFk6IG51bWJlciA9IGNlbGwuWSArIDFcbiAgICAgIGNvbnN0IHBhcnRPZlNoYXBlID0gdGhpcy5fbW92aW5nU2hhcGUuaXNQYXJ0T2ZTaGFwZShjZWxsLmFkZFkoMSkpXG4gICAgICByZXR1cm4gKFxuICAgICAgICBuZXh0WSA9PT0gdGhpcy5fbWFwLmhlaWdodCB8fFxuICAgICAgICAodGhpcy5fbWFwLmlzQ2VsbEZpbGxlZChjZWxsLlgsIG5leHRZKSAmJiAhcGFydE9mU2hhcGUpXG4gICAgICApXG4gICAgfSlcblxuICAgIGlmICghcmVhY2hlZEJvdHRvbSkge1xuICAgICAgdGhpcy5fbWFwLmNsZWFyU2hhcGUodGhpcy5fbW92aW5nU2hhcGUpXG4gICAgICB0aGlzLl9tb3ZpbmdTaGFwZS5tb3ZlKDAsIDEpXG4gICAgICB0aGlzLl9tYXAuY29sb3JTaGFwZSh0aGlzLl9tb3ZpbmdTaGFwZSlcbiAgICB9XG5cbiAgICByZXR1cm4gcmVhY2hlZEJvdHRvbVxuICB9XG5cbiAgcHJpdmF0ZSBoYW5kbGVGaWxsZWRMaW5lcygpOiB2b2lkIHtcbiAgICBsZXQgZmlsbGVkTGluZXNDb3VudCA9IHRoaXMuX21hcC5yZW1vdmVGaWxsZWRMaW5lcygpXG5cbiAgICBpZiAoZmlsbGVkTGluZXNDb3VudCA+IDApIHtcbiAgICAgIHRoaXMuaW5jcmVhc2VTY29yZShmaWxsZWRMaW5lc0NvdW50ICogR0FNRV9DT05GSUcuRklMTEVEX0xJTkVfQk9OVVMpXG5cbiAgICAgIGlmICh0aGlzLl91cGRhdGVFdmVyeVhGcmFtZXMgPiAwKSB7XG4gICAgICAgIHRoaXMuX3VwZGF0ZUV2ZXJ5WEZyYW1lcy0tXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjaGVja0ZvckdhbWVPdmVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9tYXAuYW55RmlsbGVkT25Sb3coMClcbiAgfVxuXG4gIHByaXZhdGUgZ2VuZXJhdGVSYW5kb21TaGFwZSgpOiBTaGFwZSB7XG4gICAgY29uc3QgcmFuZG9tU2hhcGVUeXBlSW5kZXggPSBNYXRoLmZsb29yKFxuICAgICAgTWF0aC5yYW5kb20oKSAqIHRoaXMuX3NoYXBlVHlwZXMubGVuZ3RoXG4gICAgKVxuICAgIGxldCBzaGFwZUNvbG9yID0gR0FNRV9DT05GSUcuU0hBUEVfQ09MT1JTW3JhbmRvbVNoYXBlVHlwZUluZGV4XVxuXG4gICAgcmV0dXJuIHRoaXMuX3NoYXBlRmFjdG9yeS5jcmVhdGVTaGFwZShcbiAgICAgIHRoaXMuX3NoYXBlVHlwZXNbcmFuZG9tU2hhcGVUeXBlSW5kZXhdLFxuICAgICAgbmV3IFZlY3RvcjIoTWF0aC5mbG9vcih0aGlzLl9tYXAud2lkdGggLyAyKSwgLTMpLFxuICAgICAgc2hhcGVDb2xvclxuICAgIClcbiAgfVxuXG4gIHByaXZhdGUgZHJhd1NoYXBlc0luUXVldWUoKTogdm9pZCB7XG4gICAgY2FudmFzMkQuZHJhd1RleHQoXG4gICAgICBHQU1FX0NPTkZJRy5ORVhUX1NIQVBFX0xBQkVMLFxuICAgICAgR0FNRV9DT05GSUcuTkVYVF9TSEFQRV9MQUJFTF9GT05ULFxuICAgICAgR0FNRV9DT05GSUcuRk9OVF9DT0xPUixcbiAgICAgIEdBTUVfQ09ORklHLk5FWFRfU0hBUEVfTEFCRUxfUE9TSVRJT04sXG4gICAgICBHQU1FX0NPTkZJRy5ORVhUX1NIQVBFX0xBQkVMX1BPU0lUSU9OLkFMSUdOTUVOVFxuICAgIClcblxuICAgIC8vIOu4lOuhnSDtgZDsl5DripQg67O07Ya1IDHqsJzrp4wg7J6I6rOgIDHqsJzslKkg7LGE7JuM7KGM64uk6rCAIOu5oOyhjOuLpOqwgOulvCDrsJjrs7XtlZzri6QuXG4gICAgLy8g6re465+w642wIO2BkOyXkCDsl6zrn6wg67iU66Gd7J2EIOyxhOybjOuEo+ydhCDsiJgg7J6I64ukLiDrgpjspJHsl5Ag67iU66Gd7J2EIOuvuOumrCDrs7Tsl6zso7zripTqsbgg66eM65Ok7Ja064KYIO2VoCDrlYwg7JOw7J206rKg7KeALlxuICAgIGZvciAobGV0IGkgPSB0aGlzLl9zaGFwZXNRdWV1ZS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgbGV0IHNoYXBlID0gdGhpcy5fc2hhcGVzUXVldWVbaV1cbiAgICAgIGxldCBpbmRleEZyb21FbmQgPSB0aGlzLl9zaGFwZXNRdWV1ZS5sZW5ndGggLSAxIC0gaVxuICAgICAgbGV0IGRlbW9TaGFwZSA9IHRoaXMuX3NoYXBlRmFjdG9yeS5jcmVhdGVTaGFwZShcbiAgICAgICAgc2hhcGUuc2hhcGVUeXBlLFxuICAgICAgICBuZXcgVmVjdG9yMihcbiAgICAgICAgICBHQU1FX0NPTkZJRy5ORVhUX1NIQVBFX1BPU0lUSU9OLlggK1xuICAgICAgICAgICAgaW5kZXhGcm9tRW5kICogNCAqIEdBTUVfQ09ORklHLk5FWFRfU0hBUEVfQ0VMTF9TSVpFLFxuICAgICAgICAgIEdBTUVfQ09ORklHLk5FWFRfU0hBUEVfUE9TSVRJT04uWVxuICAgICAgICApLFxuICAgICAgICBzaGFwZS5jb2xvcixcbiAgICAgICAgR0FNRV9DT05GSUcuTkVYVF9TSEFQRV9DRUxMX1NJWkVcbiAgICAgIClcblxuICAgICAgZGVtb1NoYXBlLmNlbGxzLmZvckVhY2goKGNlbGwpID0+XG4gICAgICAgIGNhbnZhczJELmRyYXdSZWN0KFxuICAgICAgICAgIGNlbGwsXG4gICAgICAgICAgZGVtb1NoYXBlLmNvbG9yLFxuICAgICAgICAgIEdBTUVfQ09ORklHLlNUUk9LRV9DT0xPUixcbiAgICAgICAgICBHQU1FX0NPTkZJRy5ORVhUX1NIQVBFX0NFTExfU0laRSxcbiAgICAgICAgICBHQU1FX0NPTkZJRy5ORVhUX1NIQVBFX0NFTExfU0laRVxuICAgICAgICApXG4gICAgICApXG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBkcmF3U2NvcmUoKTogdm9pZCB7XG4gICAgY2FudmFzMkQuZHJhd1RleHQoXG4gICAgICBHQU1FX0NPTkZJRy5TQ09SRV9MQUJFTCArIHRoaXMuX3Njb3JlLnRvU3RyaW5nKCksXG4gICAgICBHQU1FX0NPTkZJRy5TQ09SRV9MQUJFTF9GT05ULFxuICAgICAgR0FNRV9DT05GSUcuRk9OVF9DT0xPUixcbiAgICAgIEdBTUVfQ09ORklHLlNDT1JFX0xBQkVMX1BPU0lUSU9OLFxuICAgICAgR0FNRV9DT05GSUcuU0NPUkVfTEFCRUxfUE9TSVRJT04uQUxJR05NRU5UXG4gICAgKVxuICB9XG5cbiAgLy8tLS0tLS1QdWJsaWMgTWV0aG9kcy0tLS0tLS8vXG5cbiAgcHVibGljIGluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5fZ2FtZU92ZXIgPSBmYWxzZVxuICAgIHRoaXMuX3Njb3JlID0gMFxuICAgIHRoaXMuX2ZyYW1lID0gMFxuICAgIHRoaXMuX3VwZGF0ZUV2ZXJ5WEZyYW1lcyA9IEdBTUVfQ09ORklHLlVQREFURV9BRlRFUl9YX0ZSQU1FU1xuICAgIHRoaXMuX21hcC5pbml0KClcbiAgICBjb25zdCBuZXdTaGFwZTogU2hhcGUgPSB0aGlzLmdlbmVyYXRlUmFuZG9tU2hhcGUoKVxuICAgIHRoaXMuX3NoYXBlc1F1ZXVlID0gW25ld1NoYXBlXVxuICAgIHRoaXMuX21vdmluZ1NoYXBlID0gdGhpcy5nZW5lcmF0ZVJhbmRvbVNoYXBlKClcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGUoKTogdm9pZCB7XG4gICAgdGhpcy5oYW5kbGVJbnB1dCgpXG4gICAgaWYgKCsrdGhpcy5fZnJhbWUgJSB0aGlzLl91cGRhdGVFdmVyeVhGcmFtZXMpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBjb25zdCByZWFjaGVkQm90dG9tID0gdGhpcy5sb3dlclNoYXBlKClcbiAgICBpZiAocmVhY2hlZEJvdHRvbSkge1xuICAgICAgdGhpcy5oYW5kbGVGaWxsZWRMaW5lcygpXG4gICAgICB0aGlzLl9nYW1lT3ZlciA9IHRoaXMuY2hlY2tGb3JHYW1lT3ZlcigpXG4gICAgICBpZiAoIXRoaXMuX2dhbWVPdmVyKSB7XG4gICAgICAgIGxldCBuZXdTaGFwZTogU2hhcGUgPSB0aGlzLmdlbmVyYXRlUmFuZG9tU2hhcGUoKVxuICAgICAgICB0aGlzLl9zaGFwZXNRdWV1ZS51bnNoaWZ0KG5ld1NoYXBlKVxuICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZSA9IHRoaXMuX3NoYXBlc1F1ZXVlLnBvcCgpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGRyYXcoKTogdm9pZCB7XG4gICAgdGhpcy5fbWFwLmRyYXcoKVxuICAgIHRoaXMuZHJhd1Njb3JlKClcbiAgICB0aGlzLmRyYXdTaGFwZXNJblF1ZXVlKClcbiAgfVxufVxuIiwiaW1wb3J0IHsgU2hhcGUgfSBmcm9tICcuLy4uL3NoYXBlL1NoYXBlJ1xuaW1wb3J0IHsgQ2VsbCB9IGZyb20gJy4vQ2VsbCdcbmltcG9ydCB7IGNhbnZhczJEIH0gZnJvbSAnLi4vQ2FudmFzJ1xuaW1wb3J0IHsgR0FNRV9DT05GSUcgfSBmcm9tICcuLi9nYW1lLmNvbmZpZydcblxuZXhwb3J0IGNsYXNzIEdhbWVNYXAge1xuICBcbiAgcHJpdmF0ZSBfaGVpZ2h0OiBudW1iZXJcbi8vLS0tLS0tTWVtYmVycy0tLS0tLS8vXG5cbiAgcHJpdmF0ZSBfbWFwOiBDZWxsW11bXVxuICBwcml2YXRlIF93aWR0aDogbnVtYmVyXG5cbiAgLy8tLS0tLS1Qcm9wZXJ0aWVzLS0tLS0tLy9cblxuICBwdWJsaWMgZ2V0IGhlaWdodCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9oZWlnaHRcbiAgfVxuXG4gIHB1YmxpYyBnZXQgd2lkdGgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fd2lkdGhcbiAgfVxuXG4gIC8vLS0tLS0tQ29uc3RydWN0b3ItLS0tLS0vL1xuXG4gIGNvbnN0cnVjdG9yKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSB7XG4gICAgdGhpcy5fbWFwID0gW11cbiAgICB0aGlzLl93aWR0aCA9IHdpZHRoXG4gICAgdGhpcy5faGVpZ2h0ID0gaGVpZ2h0XG4gIH1cblxuICAvLy0tLS0tLVB1YmxpYyBNZXRob2RzLS0tLS0tLy9cblxuICBwdWJsaWMgaW5pdCgpOiB2b2lkIHtcbiAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgdGhpcy5faGVpZ2h0OyBpKyspIHtcbiAgICAgIHRoaXMuX21hcFtpXSA9IFtdXG5cbiAgICAgIC8vIOydtOugh+qyjCDtlZjrqbQgYXJyYXkg6rO16rCE7J20IOyekOuPmeycvOuhnCDtlaDri7nsnbQg65Cc64ukKC4uLilcbiAgICAgIGZvciAobGV0IGo6IG51bWJlciA9IDA7IGogPCB0aGlzLl93aWR0aDsgaisrKSB7XG4gICAgICAgIHRoaXMuX21hcFtpXVtqXSA9IG5ldyBDZWxsKClcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwdWJsaWMgaXNJbk1hcCh4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgIHJldHVybiB4ID49IDAgJiYgeCA8IHRoaXMuX3dpZHRoICYmIHkgPj0gMCAmJiB5IDwgdGhpcy5faGVpZ2h0XG4gIH1cblxuICBwdWJsaWMgaXNDZWxsRmlsbGVkKHg6IG51bWJlciwgeTogbnVtYmVyKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuaXNJbk1hcCh4LCB5KSAmJiB0aGlzLl9tYXBbeV1beF0uZmlsbGVkXG4gIH1cblxuICBwdWJsaWMgY2xlYXJDZWxsKHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuaXNJbk1hcCh4LCB5KSkge1xuICAgICAgdGhpcy5fbWFwW3ldW3hdLmZpbGxlZCA9IGZhbHNlXG4gICAgfVxuICB9XG5cbiAgcHVibGljIGNsZWFyU2hhcGUoc2hhcGU6IFNoYXBlKTogdm9pZCB7XG4gICAgc2hhcGUuY2VsbHMuZm9yRWFjaCgoY2VsbCkgPT4ge1xuICAgICAgdGhpcy5jbGVhckNlbGwoY2VsbC5YLCBjZWxsLlkpXG4gICAgfSlcbiAgfVxuXG4gIHB1YmxpYyBjb2xvckNlbGwoeDogbnVtYmVyLCB5OiBudW1iZXIsIGNvbG9yOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5pc0luTWFwKHgsIHkpKSB7XG4gICAgICB0aGlzLl9tYXBbeV1beF0uZmlsbGVkID0gdHJ1ZVxuICAgICAgdGhpcy5fbWFwW3ldW3hdLmNvbG9yID0gY29sb3JcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgY29sb3JTaGFwZShzaGFwZTogU2hhcGUpOiB2b2lkIHtcbiAgICBzaGFwZS5jZWxscy5mb3JFYWNoKChjZWxsKSA9PiB7XG4gICAgICB0aGlzLmNvbG9yQ2VsbChjZWxsLlgsIGNlbGwuWSwgc2hhcGUuY29sb3IpXG4gICAgfSlcbiAgfVxuXG4gIHB1YmxpYyBhbnlGaWxsZWRPblJvdyhyb3c6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLl9tYXBbcm93XS5zb21lKChjZWxsKSA9PiBjZWxsLmZpbGxlZClcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVGaWxsZWRMaW5lcygpOiBudW1iZXIge1xuICAgIGxldCBmaWxsZWRMaW5lc0NvdW50ID0gMFxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9tYXAubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGZpbGxlZExpbmU6IGJvb2xlYW4gPSB0aGlzLl9tYXBbaV0uZXZlcnkoKGNlbGwpID0+IGNlbGwuZmlsbGVkKVxuXG4gICAgICBpZiAoZmlsbGVkTGluZSkge1xuICAgICAgICBmaWxsZWRMaW5lc0NvdW50KytcbiAgICAgICAgdGhpcy5fbWFwLnNwbGljZShpLCAxKVxuICAgICAgICBsZXQgbmV3Um93OiBDZWxsW10gPSBbXVxuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuX3dpZHRoOyBqKyspIHtcbiAgICAgICAgICBuZXdSb3dbal0gPSBuZXcgQ2VsbCgpXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9tYXAudW5zaGlmdChuZXdSb3cpXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpbGxlZExpbmVzQ291bnRcbiAgfVxuXG4gIHB1YmxpYyBkcmF3KCk6IHZvaWQge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fbWFwLmxlbmd0aDsgaSsrKSB7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuX21hcFtpXS5sZW5ndGg7IGorKykge1xuICAgICAgICBjb25zdCBjZWxsOiBDZWxsID0gdGhpcy5fbWFwW2ldW2pdXG4gICAgICAgIGlmIChjZWxsLmZpbGxlZCkge1xuICAgICAgICAgIGNhbnZhczJELmRyYXdSZWN0QXRDZWxsKFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBjZWxsLmNvbG9yLFxuICAgICAgICAgICAgR0FNRV9DT05GSUcuU1RST0tFX0NPTE9SLFxuICAgICAgICAgICAgR0FNRV9DT05GSUcuQ0VMTF9TSVpFXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJcbmV4cG9ydCBjbGFzcyBDZWxsIHtcblxuICAgIFxuICAgIHByaXZhdGUgX2NvbG9yIDogc3RyaW5nO1xuLy8tLS0tLS1NZW1iZXJzLS0tLS0tLy9cblxuICAgIHByaXZhdGUgX2ZpbGxlZCA6IGJvb2xlYW47XG4gICAgLy8tLS0tLS1Qcm9wZXJ0aWVzLS0tLS0tLy9cblxuICAgIHB1YmxpYyBnZXQgY29sb3IoKSA6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2xvcjtcbiAgICB9XG4gICAgcHVibGljIHNldCBjb2xvcih2IDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX2NvbG9yID0gdjtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGZpbGxlZCgpIDogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9maWxsZWQ7XG4gICAgfVxuICAgIHB1YmxpYyBzZXQgZmlsbGVkKHYgOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMuX2ZpbGxlZCA9IHY7XG4gICAgfVxuXG4gICAgLy8tLS0tLS1Db25zdHJ1Y3Rvci0tLS0tLS8vXG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5fZmlsbGVkID0gZmFsc2U7XG4gICAgfVxuICAgIFxufSIsImltcG9ydCB7IFNoYXBlVHlwZSB9IGZyb20gJy4vU2hhcGVUeXBlJ1xuaW1wb3J0IHsgVmVjdG9yMiB9IGZyb20gJy4uL2dlb20vVmVjdG9yMidcbmltcG9ydCB7IFNoYXBlIH0gZnJvbSAnLi9TaGFwZSdcblxuZXhwb3J0IGNsYXNzIFNoYXBlRmFjdG9yeSB7XG4gIC8vLS0tLS0tUHVibGljIE1ldGhvZHMtLS0tLS0vL1xuXG4gIHB1YmxpYyBjcmVhdGVTaGFwZShzaGFwZVR5cGU6IFNoYXBlVHlwZSwgcG9zaXRpb246IFZlY3RvcjIsIHNoYXBlQ29sb3I6IHN0cmluZywgbWFyZ2luOiBudW1iZXIgPSAxKTogU2hhcGUge1xuICAgIGxldCBzaGFwZUNlbGxzOiBWZWN0b3IyW10gPSBbXVxuICAgIGxldCBzaGFwZU9yaWdpbjogVmVjdG9yMlxuXG4gICAgLy8gbWFyZ2luOiDsi6Tsp4jsoIHsnbggYmxvY2sg7YGs6riwXG4gICAgc3dpdGNoIChzaGFwZVR5cGUpIHtcbiAgICAgIGNhc2UgU2hhcGVUeXBlLkk6XG4gICAgICAgIHNoYXBlQ2VsbHMgPSBbXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSAtIDEgKiBtYXJnaW4pLFxuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkpLFxuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAxICogbWFyZ2luKSxcbiAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZICsgMiAqIG1hcmdpbilcbiAgICAgICAgXVxuICAgICAgICBzaGFwZU9yaWdpbiA9IG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkpXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlIFNoYXBlVHlwZS5KOlxuICAgICAgICBzaGFwZUNlbGxzID0gW1xuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgLSAxICogbWFyZ2luKSxcbiAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZKSxcbiAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZICsgMSAqIG1hcmdpbiksXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCAtIDEgKiBtYXJnaW4sIHBvc2l0aW9uLlkgKyAxICogbWFyZ2luKVxuICAgICAgICBdXG4gICAgICAgIHNoYXBlT3JpZ2luID0gbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSlcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgU2hhcGVUeXBlLkw6XG4gICAgICAgIHNoYXBlQ2VsbHMgPSBbXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSAtIDEgKiBtYXJnaW4pLFxuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkpLFxuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAxICogbWFyZ2luKSxcbiAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YICsgMSAqIG1hcmdpbiwgcG9zaXRpb24uWSArIDEgKiBtYXJnaW4pXG4gICAgICAgIF1cbiAgICAgICAgc2hhcGVPcmlnaW4gPSBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZKVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSBTaGFwZVR5cGUuTzpcbiAgICAgICAgc2hhcGVDZWxscyA9IFtcbiAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YIC0gMSAqIG1hcmdpbiwgcG9zaXRpb24uWSksXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSksXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEgKiBtYXJnaW4pLFxuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlggLSAxICogbWFyZ2luLCBwb3NpdGlvbi5ZICsgMSAqIG1hcmdpbilcbiAgICAgICAgXVxuICAgICAgICBzaGFwZU9yaWdpbiA9IG51bGxcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgU2hhcGVUeXBlLlM6XG4gICAgICAgIHNoYXBlQ2VsbHMgPSBbXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSksXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCArIDEgKiBtYXJnaW4sIHBvc2l0aW9uLlkpLFxuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAxICogbWFyZ2luKSxcbiAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YIC0gMSAqIG1hcmdpbiwgcG9zaXRpb24uWSArIDEgKiBtYXJnaW4pXG4gICAgICAgIF1cbiAgICAgICAgc2hhcGVPcmlnaW4gPSBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZICsgMSAqIG1hcmdpbilcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgU2hhcGVUeXBlLlo6XG4gICAgICAgIHNoYXBlQ2VsbHMgPSBbXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSksXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCAtIDEgKiBtYXJnaW4sIHBvc2l0aW9uLlkpLFxuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAxICogbWFyZ2luKSxcbiAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YICsgMSAqIG1hcmdpbiwgcG9zaXRpb24uWSArIDEgKiBtYXJnaW4pXG4gICAgICAgIF1cbiAgICAgICAgc2hhcGVPcmlnaW4gPSBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZICsgMSAqIG1hcmdpbilcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgU2hhcGVUeXBlLlQ6XG4gICAgICAgIHNoYXBlQ2VsbHMgPSBbXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSksXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEgKiBtYXJnaW4pLFxuICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlggLSAxICogbWFyZ2luLCBwb3NpdGlvbi5ZICsgMSAqIG1hcmdpbiksXG4gICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCArIDEgKiBtYXJnaW4sIHBvc2l0aW9uLlkgKyAxICogbWFyZ2luKVxuICAgICAgICBdXG4gICAgICAgIHNoYXBlT3JpZ2luID0gbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEgKiBtYXJnaW4pXG4gICAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBTaGFwZShzaGFwZVR5cGUsIHNoYXBlQ2VsbHMsIHNoYXBlT3JpZ2luLCBzaGFwZUNvbG9yKVxuICB9XG59XG4iLCJpbXBvcnQgeyBTaGFwZVR5cGUgfSBmcm9tICcuL1NoYXBlVHlwZSc7XG5pbXBvcnQgeyBWZWN0b3IyIH0gZnJvbSAnLi8uLi9nZW9tL1ZlY3RvcjInO1xuXG5leHBvcnQgY2xhc3MgU2hhcGUge1xuXG4gICAgLy8tLS0tLS1NZW1iZXJzLS0tLS0tLy9cblxuICAgIHByaXZhdGUgX2NlbGxzOiBWZWN0b3IyW10gPSBbXTtcbiAgICBwcml2YXRlIF9jb2xvcjogc3RyaW5nID0gJyc7XG4gICAgcHJpdmF0ZSBfb3JpZ2luOiBWZWN0b3IyID0gbnVsbDtcbiAgICBwcml2YXRlIF9zaGFwZVR5cGU6IFNoYXBlVHlwZTtcblxuICAgIC8vLS0tLS0tUHJvcGVydGllcy0tLS0tLS8vXG4gICAgXG4gICAgcHVibGljIGdldCBzaGFwZVR5cGUoKSA6IFNoYXBlVHlwZSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zaGFwZVR5cGU7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBnZXQgY2VsbHMoKSA6IFZlY3RvcjJbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jZWxscztcbiAgICB9XG4gICAgcHVibGljIHNldCBjZWxscyhjZWxscyA6IFZlY3RvcjJbXSkge1xuICAgICAgICB0aGlzLl9jZWxscyA9IGNlbGxzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgb3JpZ2luKCkgOiBWZWN0b3IyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX29yaWdpbjtcbiAgICB9XG4gICAgXG4gICAgcHVibGljIGdldCBjb2xvcigpIDogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbG9yO1xuICAgIH1cblxuICAgIC8vLS0tLS0tQ29uc3RydWN0b3ItLS0tLS0vL1xuICAgIFxuICAgIGNvbnN0cnVjdG9yKHNoYXBlVHlwZTogU2hhcGVUeXBlLCBjZWxsczogVmVjdG9yMltdLCBvcmlnaW46IFZlY3RvcjIsIGNvbG9yOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fc2hhcGVUeXBlID0gc2hhcGVUeXBlO1xuICAgICAgICB0aGlzLl9jZWxscyA9IGNlbGxzO1xuICAgICAgICB0aGlzLl9jb2xvciA9IGNvbG9yO1xuICAgICAgICB0aGlzLl9vcmlnaW4gPSBvcmlnaW47XG4gICAgfVxuXG4gICAgLy8tLS0tLS1QdWJsaWMgTWV0aG9kcy0tLS0tLS8vXG5cbiAgICBwdWJsaWMgaXNQYXJ0T2ZTaGFwZShjZWxsOiBWZWN0b3IyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jZWxscy5zb21lKHNoYXBlQ2VsbCA9PiBzaGFwZUNlbGwuWCA9PT0gY2VsbC5YICYmIHNoYXBlQ2VsbC5ZID09PSBjZWxsLlkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBtb3ZlKHg6IG51bWJlciA9IDAsIHk6IG51bWJlciA9IDApIHtcbiAgICAgICAgaWYodGhpcy5fb3JpZ2luKXtcbiAgICAgICAgICAgIHRoaXMuX29yaWdpbi5hZGRUb1goeCkuYWRkVG9ZKHkpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0aGlzLmNlbGxzLmZvckVhY2goY2VsbCA9PiBjZWxsLmFkZFRvWCh4KS5hZGRUb1koeSkpO1xuICAgIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9